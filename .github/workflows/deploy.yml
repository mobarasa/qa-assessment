name: Continuous Integration and Deployment

on:
  push:
    branches:
      - main

jobs:
  playwright-e2e-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: qatest
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent --wait=30 --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, mysql, zip
          coverage: none

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Set up environment variables
        run: |
            echo "DB_CONNECTION=mysql" >> .env
            echo "DB_HOST=127.0.0.1" >> .env
            echo "DB_PORT=3306" >> .env
            echo "DB_DATABASE=qatest" >> .env
            echo "DB_USERNAME=root" >> .env
            echo "DB_PASSWORD=root" >> .env

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader --no-interaction

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '18'

      - name: Install Node Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      - name: Migrate and Seed Database
        run: |
            php artisan migrate --force
            php artisan db:seed --force

      - name: Start Laravel server
        run: php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Install Playwright
        run: npm ci && npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        with:
            name: playwright-report
            path: playwright-report/

      - name: Deploy application
        run: echo "Deployment completed!"

  newman-api-tests:
        runs-on: ubuntu-latest
        needs: playwright-e2e-tests

        steps:
            - uses: actions/checkout@v4

            - name: Install Newman and HTML Reporter
              run: npm install -g newman newman-reporter-htmlextra

            - name: Run API Tests with Newman and Generate HTML Report
              run: newman run postman/collection.json --reporters cli,htmlextra --reporter-htmlextra-export postman-report.html

            - name: Upload API Test Report (HTML)
              uses: actions/upload-artifact@v4
              with:
                  name: postman-html-report
                  path: postman-report.html

  performance-test:
    runs-on: ubuntu-latest
    needs: newman-api-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Download and setup Apache JMeter
      run: |
        wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
        tar -xzf apache-jmeter-5.6.3.tgz
        echo "JMETER_HOME=$GITHUB_WORKSPACE/apache-jmeter-5.6.3" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/apache-jmeter-5.6.3/bin" >> $GITHUB_PATH

    - name: Run JMeter Tests
      run: |
        mkdir -p $GITHUB_WORKSPACE/test-results

        # Run JMeter test in non-GUI mode
        jmeter -n -t $GITHUB_WORKSPACE/jmeter/jsonplaceholder_test_fixed.jmx \
              -l $GITHUB_WORKSPACE/test-results/results.jtl \
              -e -o $GITHUB_WORKSPACE/test-results/dashboard

    - name: Upload JTL results
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-results-jtl
        path: $GITHUB_WORKSPACE/test-results/results.jtl

    - name: Upload HTML dashboard
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-dashboard
        path: $GITHUB_WORKSPACE/test-results/dashboard

